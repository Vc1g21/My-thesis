#LL post-stress DRCs

#load in libraries
library(emmeans)
library(drc)
library(plyr)
library(gplots)
library(ggplot2)
library(lattice)
library(grid)

# Sort input file
pamdata<-read.delim(file.choose(),header=T)
###Use file '20240911_CBASS_LL_PAM_2000_Post' found in Post > RawData
#colnames(pamdata)[colnames(pamdata) == "PAM_dark"] <- "PAM"
colnames(pamdata)[colnames(pamdata) == "PAM_light"] <- "PAM"
pamdata$Replicate<-as.factor(pamdata$Replicate)
pamdata$Species<-as.factor(pamdata$Species)
pamdata$Temp<-as.numeric(pamdata$Temp)
pamdata$Condition<-as.factor(pamdata$Condition)
pamdata$Species_condition <- paste(pamdata$Species, pamdata$Condition, sep = "_")
#pamdata$Species_condition<-as.factor(pamdata$Species_site)

aggregate(PAM ~ Species_condition + Temp, data=pamdata, summary)

# Checking sample sizes
aggregate(PAM ~ Species_condition + Temp, data=pamdata, length)

# color/shape for plots
#colors <- c("purple", "red", "orange", "yellow", "green", "blue", "grey", "lightblue", "pink", "turquoise")
shapes <- c(15, 16, 17, 18, 8, 20, 21, 22, 23, 25)

##### Replicate level Dose-response curves #####

# DRC Curve Fitting Replicate-specific = Acro_Green

DRCpamAcroG = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Acro_Green_LL",], curveid = Replicate,
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamAcroG)
compParm(DRCpamAcroG, 'ed50')
compParm(DRCpamAcroG, 'ed50', "-")
#plot(DRCpamAcroG, cex.legend = 0.8, pch = 16, col= colors, lty = 1)
#plot(DRCpamAcroG, cex.legend = 0.8, pch = 16, lty = 1)
pdf("./AcroGreen_DRC_ReplicateLevel.pdf", 7, 6) 
#plot(DRCpamAcroG, pch = 16, col= colors, lty = 1, cex.axis = 2, cex.legend = 2, cex = 2.4, cex.lab = 2)#yaxis label cut off
#plot(DRCpamAcroG, pch = 16, col= colors, lty = 1, cex.axis = 2, cex.legend = 2, cex = 2.4, cex.lab = 2) + par(mar = c(5.1, 5, 4.1, 2.1))
plot(DRCpamAcroG, cex.legend = 1, lty = 1, pch = shapes, ylab = "Fv/Fm", cex.axis = 1.5, cex.lab = 1.5)
title(main="Acro_Green")
dev.off()

#ED(DRCpamAcroG, c(50)) #these are the values taken for the boxplots
DRCpamAcroG_ED50 <- ED(DRCpamAcroG, c(50))
DRCpamAcroG_ED5 <- ED(DRCpamAcroG, c(5))
DRCpamAcroG_ED95 <- ED(DRCpamAcroG, c(95))

# DRC Curve Fitting genotype-specific = Acro_Brown
DRCpamAcroB = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Acro_Brown_LL",], curveid = Replicate,
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamAcroB)
compParm(DRCpamAcroB, 'ed50')
compParm(DRCpamAcroB, 'ed50', "-")
#plot(DRCpamAcroB, cex.legend = 0.8)
pdf("./AcroBrown_DRC_ReplicateLevel.pdf",10,7)
plot(DRCpamAcroB, cex.legend = 1, lty = 1, pch = shapes, ylab = "Fv/Fm", cex.axis = 1.5, cex.lab = 1.5)
title(main="Acro_Brown")
dev.off()

DRCpamAcroB_ED50 <- ED(DRCpamAcroB, c(50))
DRCpamAcroB_ED5 <- ED(DRCpamAcroB, c(5))
DRCpamAcroB_ED95 <- ED(DRCpamAcroB, c(95))

# DRC Curve Fitting Replicate-specific = Monti_Green
DRCpamMontiG = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Monti_Green_LL",], curveid = Replicate,
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamMontiG)
compParm(DRCpamMontiG, 'ed50')
compParm(DRCpamMontiG, 'ed50', "-")
pdf("./MontiGreen_DRC_ReplicateLevel.pdf",10,7)
plot(DRCpamMontiG, cex.legend = 1, lty = 1, pch = shapes, ylab = "Fv/Fm", cex.axis = 1.5, cex.lab = 1.5)
title(main="Monti_Green")
dev.off()

DRCpamMontiG_ED50 <- ED(DRCpamMontiG, c(50))
DRCpamMontiG_ED5 <- ED(DRCpamMontiG, c(5))
DRCpamMontiG_ED95 <- ED(DRCpamMontiG, c(95))

############################################################################
# DRC Curve Fitting Replicate-specific = Monti_Brown
DRCpamMontiB = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Monti_Brown_LL",], curveid = Replicate,
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamMontiB)
compParm(DRCpamMontiB, 'ed50')
compParm(DRCpamMontiB, 'ed50', "-")
#plot(DRCpamMontiB, cex.legend = 0.8)
pdf("./MontiBrown_DRC_ReplicateLevel.pdf",10,7)
plot(DRCpamMontiB, cex.legend = 0.8, lty = 1, pch = shapes, ylab = "Fv/Fm")
title(main="Monti_Brown")
dev.off()

DRCpamMontiB_ED50 <- ED(DRCpamMontiB, c(50))
DRCpamMontiB_ED5 <- ED(DRCpamMontiB, c(5))
DRCpamMontiB_ED95 <- ED(DRCpamMontiB, c(95))

###############################################################################
#check value range in coefficients

# Merging Coeffs ED50 ### substract MMM for RT ED50
RepCoeffs<-data.frame("ED50"=c(DRCpamAcroG$coefficients[7:9], DRCpamAcroB$coefficients[7:9], DRCpamMontiG$coefficients[7:9], DRCpamMontiB$coefficients[7:9]))
RepCoeffs$Replicate=rep(1:3, times = 4)
RepCoeffs$Species_condition=c(rep("AcroG",3), rep("AcroB",3), rep("MontiG",3), rep("MontiB",3))
aggregate(ED50 ~ Species_condition, data=RepCoeffs, mean) 

# Merging Coeffs ED5 ### substract MMM for RT ED50
RepCoeffsED5<-rbind.data.frame(DRCpamAcroG_ED5, DRCpamAcroB_ED5, DRCpamMontiG_ED5, DRCpamMontiB_ED5)
colnames(RepCoeffsED5) = c("ED5", "SE")
RepCoeffsED5$Replicate=rep(1:3, times = 4)
RepCoeffsED5$Species_condition=c(rep("AcroG",3), rep("AcroB",3), rep("MontiG",3), rep("MontiB",3))
aggregate(ED5 ~ Species_condition, data=RepCoeffsED5, mean) 

# Merging Coeffs ED95 ### substract MMM for RT ED50
RepCoeffsED95<-rbind.data.frame(DRCpamAcroG_ED95, DRCpamAcroB_ED95, DRCpamMontiG_ED95, DRCpamMontiB_ED95)
colnames(RepCoeffsED95) = c("ED95", "SE")
RepCoeffsED95$Replicate=rep(1:3, times = 4)
RepCoeffsED95$Species_condition=c(rep("AcroG",3), rep("AcroB",3), rep("MontiG",3), rep("MontiB",3))
aggregate(ED95 ~ Species_condition, data=RepCoeffsED95, mean) 

#Population level dose-response curves for summary curve plot

DRCpamAcroG_POP = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Acro_Green_LL",],
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamAcroG_POP)
compParm(DRCpamAcroG_POP, 'ed50')
compParm(DRCpamAcroG_POP, 'ed50', "-")
plot(DRCpamAcroG_POP, cex.legend = 0.8)

DRCpamAcroB_POP = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Acro_Brown_LL",],
                   fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamAcroB_POP)
compParm(DRCpamAcroB_POP, 'ed50')
compParm(DRCpamAcroB_POP, 'ed50', "-")
plot(DRCpamAcroB_POP, cex.legend = 0.8)

DRCpamMontiG_POP = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Monti_Green_LL",],
                      fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamMontiG_POP)
compParm(DRCpamMontiG_POP, 'ed50')
compParm(DRCpamMontiG_POP, 'ed50', "-")
plot(DRCpamMontiG_POP, cex.legend = 0.8)

DRCpamMontiB_POP = drm(PAM ~ Temp, data = pamdata[pamdata$Species_condition=="Monti_Brown_LL",],
                      fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRCpamMontiB_POP)
compParm(DRCpamMontiB_POP, 'ed50')
compParm(DRCpamMontiB_POP, 'ed50', "-")
plot(DRCpamMontiB_POP, cex.legend = 0.8)

# Summary curve plot
temp_x<- seq(27, 41, length = 100)
#pdf("./DRC_LL_DA_PostStress.pdf",10,7)
pdf("./DRC_LL_LA_PostStress.pdf",10,7)

line_width=5 

par(pin = c(3.5, 3))

#define ED values for each species for Vertical lines
#####Dark Adapted################################################
ED_values_AcroB <- c(35.8, 37.9, 40.2) # Ed values for Acro Green
ED_values_AcroG <- c(33.7, 36.9, 40.4)  # ED values for Acro Brown
ED_values_MontiB <- c(35.6, 37.3, 39.02)  # ED values for Monti Green
ED_values_MontiG <- c(36.4, 37.8, 39.5)  # ED values for Monti Brown

#####Light Adapted
ED_values_AcroB <- c(33.9, 37.1, 40.6) # Ed values for Acro Green
ED_values_AcroG <- c(33.5, 37.2, 41.3)  # ED values for Acro Brown
ED_values_MontiB <- c(33.6, 37.3, 41.5)  # ED values for Monti Green
ED_values_MontiG <- c(35.8, 37.8, 40)  # ED values for Monti Brown


i<-1 #AcroG
matplot(temp_x, predict(DRCpamAcroG_POP, data.frame(Temp = temp_x)), #, interval="confidence"),
        type="l",col="#009933",lty=c(1,3,3),lwd=line_width,ylab="Fv/Fm",xlab="Temperature Â°C", xlim=c(27,41),ylim=c(-0.05,0.7), cex.axis=1, cex.lab=1)

#add vertical lines for AcroG
abline(v = ED_values_AcroG, lty = 1, col = "#009933", lwd = 1, points(17))

i<-1.5 #AcroB
matpoints(temp_x, predict(DRCpamAcroB_POP, data.frame(Temp = temp_x)), #, interval="confidence"),
          type="l",col="#CC6600",lty=c(1,3,3),lwd=line_width)

# Add vertical lines for Acro Brown
abline(v = ED_values_AcroB, lty = 1, col = "#CC6600", lwd = 1)

i<-2 #MontiG
matpoints(temp_x, predict(DRCpamMontiG_POP, data.frame(Temp = temp_x)), #, interval="confidence"),
          type="l",col="#00FF00",lty=c(1,3,3),lwd=line_width)

# Add vertical lines for Monti Green
abline(v = ED_values_MontiG, lty = 1, col = "#00ff00", lwd = 1)

i<-2.5 #MontiB
matpoints(temp_x, predict(DRCpamMontiB_POP, data.frame(Temp = temp_x)), #, interval="confidence"),
          type="l",col="#cc9966",lty=c(1,3,3),lwd=line_width)

# Add vertical lines for Monti Brown
abline(v = ED_values_MontiB, lty = 1, col = "#cc9966", lwd = 1)


#add legend for colors
legend("bottomleft",
       legend = c("Acro Green", "Acro Brown", "Monti Green", "Monti Brown"), 
       col = c("#009933", "#cc6600","#00ff00","#cc9966"),
       lty = 1,
       lwd = line_width,
       cex = 0.5) 

###Dark Adapted
##############ED05 LABEL##########
text(x= 35.14, y=0.767, cex=0.65, "ED05", xpd=NA)
lines(x=c(33.7, 36.4), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 33.7, y0=0.73, x1=33.7, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 36.4, y0=0.73, x1=36.4, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
#############ED05 LABEL###########
###ED50###
text(x= 37.4, y=0.767, cex=0.65, "ED50", xpd=NA)
lines(x=c(36.9, 37.9), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 36.9, y0=0.73, x1=36.9, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 37.9, y0=0.73, x1=37.9, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
######ED50
######ED95
text(x= 39.7, y=0.767, cex=0.65, "ED95", xpd=NA)
lines(x=c(39, 40.4), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 39, y0=0.73, x1=39, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 40.4, y0=0.73, x1=40.4, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
#####ED95
title(main = "LL Dark Adapted (Post Stress)")
dev.off()


#Light adapted 
##############ED05 LABEL##########
text(x= 34.7, y=0.767, cex=0.65, "ED05", xpd=NA)
lines(x=c(33.5, 35.8), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 33.5, y0=0.73, x1=33.5, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 35.8, y0=0.73, x1=35.8, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
#############ED05 LABEL###########
###ED50###
text(x= 37.5, y=0.767, cex=0.65, "ED50", xpd=NA)
lines(x=c(37.1, 37.8), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 37.1, y0=0.73, x1=37.1, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 37.8, y0=0.73, x1=37.8, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
######ED50
######ED95
text(x= 40.75, y=0.767, cex=0.65, "ED95", xpd=NA)
lines(x=c(40, 41.5), y=c(0.75, 0.75), col="black", ldw=1, lty=1, xpd=NA )

segments(x0= 40, y0=0.73, x1=40, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
segments(x0= 41.5, y0=0.73, x1=41.5, y1=0.75, col="black", ldw=1, lty=1, xpd=NA)
#####ED95
title(main = "LL Light Adapted (Post Stress)")
dev.off()

#Complete for LL Recovery, HL post-stress and HL Recovery
